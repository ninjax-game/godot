name: üçé macOS Builds
on:
  workflow_call:

# Global Settings
env:
  # Used for the cache key. Add version suffix to force clean build.
  GODOT_BASE_BRANCH: master
  SCONSFLAGS: verbose=yes warnings=extra werror=yes module_text_server_fb_enabled=yes strict_checks=yes

jobs:
  build-macos:
    runs-on: mac_runner
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor w/ Mono (target=editor, tests=yes)
            cache-name: macos-editor-mono
            target: editor
            tests: true
            sconsflags: module_mono_enabled=yes
            bin: ./bin/godot.macos.editor.universal.mono
            build-mono: true
            cache-limit: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Restore Godot build cache
        uses: ./.github/actions/godot-cache-restore
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Setup Python and SCons
        uses: ./.github/actions/godot-deps

      - name: Setup Vulkan SDK
        run: |
          sh misc/scripts/install_vulkan_sdk_macos.sh

      - name: Setup older .NET SDK as baseline
        if: matrix.build-mono
        uses: actions/setup-dotnet@v4
        with:
          # Targeting the oldest version we want to support to ensure it still builds.
          dotnet-version: 8.0.100

      - name: Compilation (x86_64)
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} arch=x86_64
          platform: macos
          target: ${{ matrix.target }}
          tests: ${{ matrix.tests }}
          scons-cache-limit: 0 # Only cap on second run to avoid purging unnecessarily

      - name: Compilation (arm64)
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} arch=arm64
          platform: macos
          target: ${{ matrix.target }}
          tests: ${{ matrix.tests }}
          scons-cache-limit: ${{ matrix.cache-limit }}

      - name: Save Godot build cache
        uses: ./.github/actions/godot-cache-save
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Prepare artifact
        run: |
          lipo -create ./bin/godot.macos.${{ matrix.target }}.x86_64.mono ./bin/godot.macos.${{ matrix.target }}.arm64.mono -output ./bin/godot.macos.${{ matrix.target }}.universal.mono
          rm ./bin/godot.macos.${{ matrix.target }}.x86_64.mono ./bin/godot.macos.${{ matrix.target }}.arm64.mono
          strip bin/godot.*
          chmod +x bin/godot.*

      - name: Generate C# glue
        if: matrix.build-mono
        run: |
          ${{ matrix.bin }} --headless --generate-mono-glue ./modules/mono/glue

      - name: Build .NET solutions
        if: matrix.build-mono
        run: |
          dotnet --info
          python ./modules/mono/build_scripts/build_assemblies.py --godot-output-dir=./bin --godot-platform=macos --werror

      - name: Upload artifact
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}

      - name: Unit tests
        if: matrix.tests
        run: |
          ${{ matrix.bin }} --version
          ${{ matrix.bin }} --help
          ${{ matrix.bin }} --test --force-colors
